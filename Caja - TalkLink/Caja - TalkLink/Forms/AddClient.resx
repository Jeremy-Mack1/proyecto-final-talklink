<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB0
        CgAAAk1TRnQBSQFMAwEBAAEgAQABIAEAASABAAEgAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABgAMA
        ASADAAEBAQABIAYAAUB6AAMJAQsDGQEiAy0BRQMZASIDCQEL/wDpAAMSARgDLgFIAz8BbAM6AWADQAFt
        AyoBQAMJAQv/AN0AAwMBBAMMARADMQFMA0UBewNJAYMDMAFLA1EBlQNAAW4DGQEi/wDdAAMMARADKgFA
        A1UBnwM9AWgDCQEMBAADMAFLAzoBYAMtAUX/ANkAAxIBGAMxAUwDVQGfAzUBVQMYASADBQEGAwkBDANJ
        AYMDQAFtAxoBI/8A1QADEgEXAzIBTwNFAXsDPgFpAxgBIAMGAQgDFwEfAz0BZwNGAXwDLwFJAwkBDP8A
        nQAEAQMFAQYDEAEVAxkBIgMeASsDIAEuAyEBLwMgAS4DHQEoAxYBHQMKAQ0DAwEEAwMBBAMMARADMAFK
        A0QBeQNCAXMDCwEOAwUBBgMYASADNAFUA1UBnwMxAU0DEwEZ/wChAAMFAQYDEgEXAzQBVANLAYkDXQGu
        A2UBuANpAb0DYgG2A1YBoANCAXQDIwEyAwsBDgMMARADKgFAA1UBnwM9AWgDCQEMBAADCQEMAz0BaANV
        AZ8DKgFAAwwBEP8AnQADAwEEAyQBNQNBAXADTwGTA0ABbQMyAU8DJwE6AyABLgMhAS8DJAE1Ay0BRAM5
        AV4DSQGDA0oBhQNJAYQDVQGfAzUBVQMYASADBQEGAwkBDANBAXEDRAF6AzEBTAMMARADAwEE/wCVAAQC
        AwgBCgMwAUsDPgFpA0ABbQM5AV8DMgFPAzEBTQM0AVMDNgFZAzYBVwMzAVIDMQFNAzEBTAM2AVcDPgFq
        A0wBiwNwAcUDLQFEAwwBEAMYASADPQFoA0QBegMzAVADEgEY/wCZAAQBAwwBEAMpAT0DSQGEA0IBcwMs
        AUMDHwEsAy4BRgM8AWQDRwGBA1IBmQNNAY4DRwF+Az4BawM1AVUDJgE4AyYBOAM2AVkDVgGiAzoBYQMt
        AUQDNQRVAZ8DMQFMAxIBGP8AnQADAgEDAyMBMgNmAbkDOAFbAxwBJwMmATgDXQGrA1YBoANCAXQDMQFO
        AzMBUgMgAS0DHwEsAzEBTQNOAZADXgGvAz4BawMYASADHQEpA1cBoQNwAcUDVgGgAyoBQAMMARD/AKEA
        AyABLgM8AWQDRgF8AyMBMwM2AVkDTAGKAzsBYgNOAZADVAGeA08BkgNCAXIDJQE3AxIBGAMPARMDGgEk
        Ay0BRANDAXYDRgF9AxgBIAM2AVgDTAGKA0kBgwMMARADAwEE/wCdAAMEAQUDNAFTA0oBhQMkATUDMwFQ
        A0EBcQNKAYgDSgGGA0MBdgM9AWcDNQFVAyoBPwMWAR0DBwEJCAADDQERAy4BSANDAXYDPgFrAyUBNwM9
        AWgDSQGDAwsBDgMDAQT/AJ0AAxIBGAM9AWgDSgGHAwkBDANHAX8DSAGCA0EBcQNXAaUDMQFOAxIBGBwA
        Aw0BEQMtAUQDXQGuAyYBOAM1AVYDSAGCAyIBMQMJAQz/AJ0AAyoBQAM8AWQDOQFfAxwBJwNLAYkDVgGg
        A0kBgwMvAUkDDgESJAADGgEkA04BkAM0AVQDMAFLAzkBXQNBAXEDFQEc/wCdAAM7AWMDOwFiAy4BSAM6
        AWEDPgFqA04BkQNMAY0DDgESAwQBBSQAAw8BEwMxAUwDQAFvAzMBUQMtAUQDVAGdAxwBJ/8AnQADRAF4
        AzoBYQMnAToDSgGGAzoBYANHAX8DRwGAKAADBwEJAxMBGQMgAS0DSQGEAzUBVgMlATYDYgG2AyABLf8A
        nQADRwGBAzoBYAMkATQDUAGWAzgBWwM5AV8DNgFZKAADFgEdAyUBNwMhAS8DTwGSAzcBWgMhATADagG/
        AyEBMP8AnQADRwGAAzoBYAMkATUDUAGUAzABSwMdASkDEgEYKAADKQE+A0EBcQMyAU8DUgGZAzYBWQMh
        ATADagG+AyEBMP8AnQADQQFwAzoBYQMqAT8DRAF4AzYBWQMeASsDBQEGKAADNgFZA1EBmAMxAU0DRwGB
        AzQBUwMnAToDXQGuAx4BK/8AnQADNAFTAzsBYwM0AVMDLgFHA0MBdgMsAUMoAAMUARsDPwFsA1YBowNC
        AXQDPAFkAzEBTQMzAVADTAGKAxoBI/8AnQADIAEuAzwBZQNBAXADEwEZA0oBhwM6AWADDAEQHAADBAEF
        AxABFQM0AVQDRAF6A04BkQNWAaADLgFGAzIBTwNAAW4DNQFWAxEBFv8AnQADBgEHAz0BaANRAZcDBQEG
        A0EBcQNCAXQDKgE/HAADEAEVAzMBUgNbAaoDSwGJAzwBZANdAa0DHwEsAzoBYANQAZQDEAEVAwQBBf8A
        nQAEAgMsAUMDRAF5AzgBXAMlATcDPAFmA0oBiAMqAT8DDAEQBAADBQEGAxIBGAM5AV0DSgGFA04BkQNK
        AYUDQgFyA0sBiQNMAYsDJwE6AywBQwNAAW0DQAFvAwQBBQQB/wChAAMVARwDMQFOA08BkgMuAUYDLgFH
        AzwBZgNDAXUDOgFgAysBQgMeASsDHQEpAzsBYgNIAYIDTwGTA1YBoANJAYMDQgFyAzYBWQMcAScDQgF0
        Az4BagMkATX/AKkABAEDGQEiA0kBgwNAAW4DLgFGAyYBOANBAXEDSgGGA0MBdQM2AVgDMAFKAzgBWwM5
        AV8DPQFoA0sBiQNHAX8DMwFRAyMBMwM4AVsDSgGFAzEBTAMEAQX/AK0AAwIBAwMJAQsDSQGDA08BkwM5
        AV0DBQEGAxMBGQMuAUcDRAF3A08BkwNRAZUDSgGFAzsBYgMcAScDCQELAyQBNQNGAXwDZgG5AykBPQMI
        AQr/ALEABAEDAgEDAxgBIQMxAU0DRAF5A1EBlwNBAXADNAFTAyoBPwMlATYDJAE1AycBOgMuAUgDOQFf
        A0oBhgNKAYUDPAFlAyMBMwMMARAEAv8AvQADFAEbAysBQgM9AWgDPAFlAzsBYwM7AWIDOgFhAzoBYQM6
        AWEDOwFiAzwBZAM9AWgDNAFTAyEBLwMCAQMEAf8AxQAEAgMGAQcDIAEuAzQBUwNBAXEDRwGAA0gBggNE
        AXgDOwFjAysBQQMSARgDBAEF/wD/AP8AtwABQgFNAT4HAAE+AwABKAMAAYADAAEgAwABAQEAAQEGAAEC
        FgAD/wEAA/8BwQwAA/8BgAwAAv8B/g0AAv8B/gEIDAAC/wH8DQAC/wH4DQAB/gIAAQEMAAH+AgABgwwA
        AfgCAAEDDAAB4AIAAQ8MAAHAAgABHwwAAcACAAE/DAABwAIAAT8MAAGAAQEBgAE/DAABgAEfAcABPwwA
        AYABPwHgAT8MAAGAAT8B4AE/DAABgAH/AcABPwwAAYAB/wHAAT8MAAGAAf8BwAE/DAABgAH/AcABPwwA
        AYEB/wGAAT8MAAGAAf4BAAE/DAABgAH+AQABPwwAAYABIAEAAT8MAAHAAgAB/wwAAcACAAH/DAAB4AEA
        AQEB/wwAAeABAAEBAf8MAAH8AQABAwH/DAAB/gEAAR8B/wwABP8MAAs=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>76</value>
  </metadata>
</root>