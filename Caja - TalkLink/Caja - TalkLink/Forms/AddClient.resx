<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB0
        CgAAAk1TRnQBSQFMAwEBAAGIAQABiAEAASABAAEgAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABgAMA
        ASADAAEBAQABIAYAAUB6AAMJAQsDGQEiAy0BRQMZASIDCQEL/wDpAAMSARgDLgFIAz8BbAM6AWADPwFt
        AyoBQAMJAQv/AN0AAwMBBAMMARADMQFMA0QBewNIAYMDMAFLA04BlQNAAW4DGQEi/wDdAAMMARADKgFA
        A1EBnwM9AWgDCQEMBAADMAFLAzoBYAMtAUX/ANkAAxIBGAMxAUwDUQGfAzUBVQMYASADBQEGAwkBDANI
        AYMDPwFtAxoBI/8A1QADEgEXAzIBTwNEAXsDPgFpAxgBIAMGAQgDFwEfAz0BZwNFAXwDLwFJAwkBDP8A
        nQAEAQMFAQYDEAEVAxkBIgMeASsDIAEuAyEBLwMgAS4DHQEoAxYBHQMKAQ0DAwEEAwMBBAMMARADMAFK
        A0QBeQNCAXMDCwEOAwUBBgMYASADNAFUA1EBnwMxAU0DEwEZ/wChAAMFAQYDEgEXAzQBVANKAYkDVgGu
        A1gBuANaAb0DWQG2A1IBoANCAXQDIwEyAwsBDgMMARADKgFAA1EBnwM9AWgDCQEMBAADCQEMAz0BaANR
        AZ8DKgFAAwwBEP8AnQADAwEEAyQBNQNBAXADTQGTAz8BbQMyAU8DJwE6AyABLgMhAS8DJAE1Ay0BRAM5
        AV4DSAGDA0kBhQNIAYQDUQGfAzUBVQMYASADBQEGAwkBDANBAXEDRAF6AzEBTAMMARADAwEE/wCVAAQC
        AwgBCgMwAUsDPgFpAz8BbQM5AV8DMgFPAzEBTQM0AVMDNgFZAzYBVwMzAVIDMQFNAzEBTAM2AVcDPgFq
        A0sBiwNdAcUDLQFEAwwBEAMYASADPQFoA0QBegMzAVADEgEY/wCZAAQBAwwBEAMpAT0DSAGEA0IBcwMs
        AUMDHwEsAy4BRgM8AWQDRwGBA08BmQNMAY4DRgF+Az4BawM1AVUDJgE4AyYBOAM2AVkDUwGiAzoBYQMt
        AUQDNQFVA1EBnwMxAUwDEgEY/wCdAAMCAQMDIwEyA1kBuQM4AVsDHAEnAyYBOANWAasDUgGgA0IBdAMx
        AU4DMwFSAyABLQMfASwDMQFNA0wBkANVAa8DPgFrAxgBIAMdASkDUgGhA10BxQNSAaADKgFAAwwBEP8A
        oQADIAEuAzwBZANFAXwDIwEzAzYBWQNLAYoDOwFiA0wBkANRAZ4DTQGSA0IBcgMlATcDEgEYAw8BEwMa
        ASQDLQFEA0MBdgNGAX0DGAEgAzYBWANLAYoDSAGDAwwBEAMDAQT/AJ0AAwQBBQM0AVMDSQGFAyQBNQMz
        AVADQQFxA0kBiANJAYYDQwF2Az0BZwM1AVUDKgE/AxYBHQMHAQkIAAMNAREDLgFIA0MBdgM+AWsDJQE3
        Az0BaANIAYMDCwEOAwMBBP8AnQADEgEYAz0BaANJAYcDCQEMA0YBfwNHAYIDQQFxA1MBpQMxAU4DEgEY
        HAADDQERAy0BRANWAa4DJgE4AzUBVgNHAYIDIgExAwkBDP8AnQADKgFAAzwBZAM5AV8DHAEnA0oBiQNS
        AaADSAGDAy8BSQMOARIkAAMaASQDTAGQAzQBVAMwAUsDOQFdA0EBcQMVARz/AJ0AAzsBYwM7AWIDLgFI
        AzoBYQM+AWoDTQGRA0sBjQMOARIDBAEFJAADDwETAzEBTANAAW8DMwFRAy0BRANRAZ0DHAEn/wCdAANE
        AXgDOgFhAycBOgNJAYYDOgFgA0YBfwNHAYAoAAMHAQkDEwEZAyABLQNIAYQDNQFWAyUBNgNZAbYDIAEt
        /wCdAANHAYEDOgFgAyQBNANOAZYDOAFbAzkBXwM2AVkoAAMWAR0DJQE3AyEBLwNNAZIDNwFaAyEBMANa
        Ab8DIQEw/wCdAANHAYADOgFgAyQBNQNOAZQDMAFLAx0BKQMSARgoAAMpAT4DQQFxAzIETwGZAzYBWQMh
        ATADXAG+AyEBMP8AnQADQQFwAzoBYQMqAT8DRAF4AzYBWQMeASsDBQEGKAADNgFZA04BmAMxAU0DRwGB
        AzQBUwMnAToDVgGuAx4BK/8AnQADNAFTAzsBYwM0AVMDLgFHA0MBdgMsAUMoAAMUARsDPwFsA1IBowNC
        AXQDPAFkAzEBTQMzAVADSwGKAxoBI/8AnQADIAEuAzwBZQNBAXADEwEZA0kBhwM6AWADDAEQHAADBAEF
        AxABFQM0AVQDRAF6A00BkQNSAaADLgFGAzIBTwNAAW4DNQFWAxEBFv8AnQADBgEHAz0BaANPAZcDBQEG
        A0EBcQNCAXQDKgE/HAADEAEVAzMBUgNVAaoDSgGJAzwBZANVAa0DHwEsAzoBYANOAZQDEAEVAwQBBf8A
        nQAEAgMsAUMDRAF5AzgBXAMlATcDPAFmA0kBiAMqAT8DDAEQBAADBQEGAxIBGAM5AV0DSQGFA00BkQNJ
        AYUDQgFyA0oBiQNLAYsDJwE6AywBQwM/AW0DQAFvAwQBBQQB/wChAAMVARwDMQFOA00BkgMuAUYDLgFH
        AzwBZgNDAXUDOgFgAysBQgMeASsDHQEpAzsBYgNHAYIDTQGTA1IBoANIAYMDQgFyAzYBWQMcAScDQgF0
        Az4BagMkATX/AKkABAEDGQEiA0gBgwNAAW4DLgFGAyYBOANBAXEDSQGGA0MBdQM2AVgDMAFKAzgBWwM5
        AV8DPQFoA0oBiQNGAX8DMwFRAyMBMwM4AVsDSQGFAzEBTAMEAQX/AK0AAwIBAwMJAQsDSAGDA00BkwM5
        AV0DBQEGAxMBGQMuAUcDRAF3A00BkwNOAZUDSQGFAzsBYgMcAScDCQELAyQBNQNFAXwDWQG5AykBPQMI
        AQr/ALEABAEDAgEDAxgBIQMxAU0DRAF5A08BlwNBAXADNAFTAyoBPwMlATYDJAE1AycBOgMuAUgDOQFf
        A0kBhgNJAYUDPAFlAyMBMwMMARAEAv8AvQADFAEbAysBQgM9AWgDPAFlAzsBYwM7AWIDOgFhAzoBYQM6
        AWEDOwFiAzwBZAM9AWgDNAFTAyEBLwMCAQMEAf8AxQAEAgMGAQcDIAEuAzQBUwNBAXEDRwGAA0cBggNE
        AXgDOwFjAysBQQMSARgDBAEF/wD/AP8AtwABQgFNAT4HAAE+AwABKAMAAYADAAEgAwABAQEAAQEGAAEC
        FgAD/wEAA/8BwQwAA/8BgAwAAv8B/g0AAv8B/gEIDAAC/wH8DQAC/wH4DQAB/gIAAQEMAAH+AgABgwwA
        AfgCAAEDDAAB4AIAAQ8MAAHAAgABHwwAAcACAAE/DAABwAIAAT8MAAGAAQEBgAE/DAABgAEfAcABPwwA
        AYABPwHgAT8MAAGAAT8B4AE/DAABgAH/AcABPwwAAYAB/wHAAT8MAAGAAf8BwAE/DAABgAH/AcABPwwA
        AYEB/wGAAT8MAAGAAf4BAAE/DAABgAH+AQABPwwAAYABIAEAAT8MAAHAAgAB/wwAAcACAAH/DAAB4AEA
        AQEB/wwAAeABAAEBAf8MAAH8AQABAwH/DAAB/gEAAR8B/wwABP8MAAs=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>31</value>
  </metadata>
</root>