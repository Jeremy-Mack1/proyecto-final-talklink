<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB2
        CgAAAk1TRnQBSQFMAwEBAAEoAQABKAEAASABAAEgAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABgAMA
        ASADAAEBAQABIAYAAUB6AAMJAQsDGQEiAy0BRQMZASIDCQEL/wDpAAMSARgDLgFIAz8BbAM6AWADPwFt
        AyoBQAMJAQv/AN0AAwMBBAMMARADMQFMA0QBewNIAYMDMAFLA08BlQNAAW4DGQEi/wDdAAMMARADKgFA
        A1IBnwM9AWgDCQEMBAADMAFLAzoBYAMtAUX/ANkAAxIBGAMxAUwDUgGfAzUBVQMYASADBQEGAwkBDANI
        AYMDPwFtAxoBI/8A1QADEgEXAzIBTwNEAXsDPgFpAxgBIAMGAQgDFwEfAz0BZwNFAXwDLwFJAwkBDP8A
        nQAEAQMFAQYDEAEVAxkBIgMeASsDIAEuAyEBLwMgAS4DHQEoAxYBHQMKAQ0DAwEEAwMBBAMMARADMAFK
        A0QBeQNCAXMDCwEOAwUBBgMYASADNAFUA1IBnwMxAU0DEwEZ/wChAAMFAQYDEgEXAzQBVANKAYkDWQGu
        A18BuANjAb0DXQG2A1MBoANCAXQDIwEyAwsBDgMMARADKgFAA1IBnwM9AWgDCQEMBAADCQEMAz0BaANS
        AZ8DKgFAAwwBEP8AnQADAwEEAyQBNQNBAXADTgGTAz8BbQMyAU8DJwE6AyABLgMhAS8DJAE1Ay0BRAM5
        AV4DSAGDA0kBhQNIAYQDUgGfAzUBVQMYASADBQEGAwkBDANBAXEDRAF6AzEBTAMMARADAwEE/wCVAAQC
        AwgBCgMwAUsDPgFpAz8BbQM5AV8DMgFPAzEBTQM0AVMDNgFZAzYBVwMzAVIDMQFNAzEBTAM2AVcDPgFq
        A0sBiwNoAcUDLQFEAwwBEAMYASADPQFoA0QBegMzAVADEgEY/wCZAAQBAwwBEAMpAT0DSAGEA0IBcwMs
        AUMDHwEsAy4BRgM8AWQDRwGBA1ABmQNMAY4DRgF+Az4BawM1AVUDJgE4AyYBOAM2AVkDVAGiAzoBYQMt
        AUQDNQFVA1IBnwMxAUwDEgEY/wCdAAMCAQMDIwEyA18BuQM4AVsDHAEnAyYBOANZAasDUwGgA0IBdAMx
        AU4DMwFSAyABLQMfASwDMQFNA0wBkANaAa8DPgFrAxgBIAMdASkDVAGhA2gBxQNTAaADKgFAAwwBEP8A
        oQADIAEuAzwBZANFAXwDIwEzAzYBWQNLAYoDOwFiA0wBkANRAZ4DTQGSA0IBcgMlATcDEgEYAw8BEwMa
        ASQDLQFEA0MBdgNGAX0DGAEgAzYBWANLAYoDSAGDAwwBEAMDAQT/AJ0AAwQBBQM0AVMDSQGFAyQBNQMz
        AVADQQFxA0kBiANJAYYDQwF2Az0BZwM1AVUDKgE/AxYBHQMHAQkIAAMNAREDLgFIA0MBdgM+AWsDJQE3
        Az0BaANIAYMDCwEOAwMBBP8AnQADEgEYAz0BaANJAYcDCQEMA0YBfwNHAYIDQQFxA1QBpQMxAU4DEgEY
        HAADDQERAy0BRANZAa4DJgE4AzUBVgNHAYIDIgExAwkBDP8AnQADKgFAAzwBZAM5AV8DHAEnA0oBiQNT
        AaADSAGDAy8BSQMOARIkAAMaASQDTAGQAzQBVAMwAUsDOQFdA0EBcQMVARz/AJ0AAzsBYwM7AWIDLgFI
        AzoBYQM+AWoDTQGRA0sBjQMOARIDBAEFJAADDwETAzEBTANAAW8DMwFRAy0BRANSAZ0DHAEn/wCdAANE
        AXgDOgFhAycBOgNJAYYDOgFgA0YBfwNHAYAoAAMHAQkDEwEZAyABLQNIAYQDNQFWAyUBNgNdAbYDIAEt
        /wCdAANHAYEDOgFgAyQBNANOAZYDOAFbAzkBXwM2AVkoAAMWAR0DJQE3AyEBLwNNAZIDNwFaAyEBMANj
        Ab8DIQEw/wCdAANHAYADOgFgAyQBNQNOAZQDMAFLAx0BKQMSARgoAAMpAT4DQQFxAzIBTwNQAZkDNgFZ
        AyEBMANjAb4DIQEw/wCdAANBAXADOgFhAyoBPwNEAXgDNgFZAx4BKwMFAQYoAAM2AVkDTwGYAzEBTQNH
        AYEDNAFTAycBOgNZAa4DHgEr/wCdAAM0AVMDOwFjAzQBUwMuAUcDQwF2AywBQygAAxQBGwM/AWwDVAGj
        A0IBdAM8AWQDMQFNAzMBUANLAYoDGgEj/wCdAAMgAS4DPAFlA0EBcAMTARkDSQGHAzoBYAMMARAcAAME
        AQUDEAEVAzQBVANEAXoDTQGRA1MBoAMuAUYDMgFPA0ABbgM1AVYDEQEW/wCdAAMGAQcDPQFoA08BlwMF
        AQYDQQFxA0IBdAMqAT8cAAMQARUDMwFSA1cBqgNKAYkDPAFkA1gBrQMfASwDOgFgA04BlAMQARUDBAEF
        /wCdAAQCAywBQwNEAXkDOAFcAyUBNwM8AWYDSQGIAyoBPwMMARAEAAMFAQYDEgEYAzkBXQNJAYUDTQGR
        A0kBhQNCAXIDSgGJA0sBiwMnAToDLAFDAz8BbQNAAW8DBAEFBAH/AKEAAxUBHAMxAU4DTQGSAy4BRgMu
        AUcDPAFmA0MBdQM6AWADKwFCAx4BKwMdASkDOwFiA0cBggNOAZMDUwGgA0gBgwNCAXIDNgFZAxwBJwNC
        AXQDPgFqAyQBNf8AqQAEAQMZASIDSAGDA0ABbgMuAUYDJgE4A0EBcQNJAYYDQwF1AzYBWAMwAUoDOAFb
        AzkBXwM9AWgDSgGJA0YBfwMzAVEDIwEzAzgBWwNJAYUDMQFMAwQBBf8ArQADAgEDAwkBCwNIAYMDTgGT
        AzkBXQMFAQYDEwEZAy4BRwNEAXcDTgGTA08BlQNJAYUDOwFiAxwBJwMJAQsDJAE1A0UBfANfAbkDKQE9
        AwgBCv8AsQAEAQMCAQMDGAEhAzEBTQNEAXkDTwGXA0EBcAM0AVMDKgE/AyUBNgMkATUDJwE6Ay4BSAM5
        AV8DSQGGA0kBhQM8AWUDIwEzAwwBEAQC/wC9AAMUARsDKwFCAz0BaAM8AWUDOwFjAzsBYgM6AWEDOgFh
        AzoBYQM7AWIDPAFkAz0BaAM0AVMDIQEvAwIBAwQB/wDFAAQCAwYBBwMgAS4DNAFTA0EBcQNHAYADRwGC
        A0QBeAM7AWMDKwFBAxIBGAMEAQX/AP8A/wC3AAFCAU0BPgcAAT4DAAEoAwABgAMAASADAAEBAQABAQYA
        AQIWAAP/AQAD/wHBDAAD/wGADAAC/wH+DQAC/wH+AQgMAAL/AfwNAAL/AfgNAAH+AgABAQwAAf4CAAGD
        DAAB+AIAAQMMAAHgAgABDwwAAcACAAEfDAABwAIAAT8MAAHAAgABPwwAAYABAQGAAT8MAAGAAR8BwAE/
        DAABgAE/AeABPwwAAYABPwHgAT8MAAGAAf8BwAE/DAABgAH/AcABPwwAAYAB/wHAAT8MAAGAAf8BwAE/
        DAABgQH/AYABPwwAAYAB/gEAAT8MAAGAAf4BAAE/DAABgAEgAQABPwwAAcACAAH/DAABwAIAAf8MAAHg
        AQABAQH/DAAB4AEAAQEB/wwAAfwBAAEDAf8MAAH+AQABHwH/DAAE/wwACw==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>76</value>
  </metadata>
</root>